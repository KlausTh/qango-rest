{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cell/cell.component.ts","webpack:///src/app/cell/cell.component.html","webpack:///src/app/qango.service.ts","webpack:///src/app/qango.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","service","colors","title","status","game","board","ailevel","players","Human","Computer","newgame","start","subscribe","nboard","update","error","console","debug","index","log","turn","next","White","Black","aiturn","white_computer","white_human","black_computer","black_human","selector","templateUrl","styleUrls","AppModule","provide","useClass","declarations","imports","providers","bootstrap","CellComponent","app","field","cls","getSide","isWinningField","winning_fields","find","i","undefined","click","activate","QangoService","http","url","get","Side","Player","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Side, Board, Game, Player } from './qango';\nimport { QangoService } from './qango.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public colors : Array<string> = [\n    \"red\", \"red\", \"yellow\", \"orange\", \"red\", \"red\",\n    \"red\", \"yellow\", \"green\", \"blue\", \"orange\", \"red\",\n    \"yellow\", \"green\", \"green\", \"blue\", \"blue\", \"orange\",\n    \"orange\", \"blue\", \"blue\", \"green\", \"green\", \"yellow\",\n    \"red\", \"orange\", \"blue\", \"green\", \"yellow\", \"red\",\n    \"red\", \"red\", \"orange\", \"yellow\", \"red\", \"red\"\n  ]\n  title : string = 'qango';\n  status : number = 0;\n\n  public game : Game = {\n    board : null,\n    ailevel : 0,\n    players : [Player.Human, Player.Computer],\n  };\n\n  constructor(private service : QangoService) {\n    this.newgame();\n  }\n\n  public newgame() {\n    this.service.start()\n      .subscribe(\n        nboard => {\n          this.update(nboard);\n        },\n        error => {\n          console.debug('Fehler', error);\n        }\n      );\n  }\n\n  public white_computer() {\n    this.game.players[0] = Player.Computer;\n  }\n\n  public white_human() {\n    this.game.players[0] = Player.Human;\n  }\n\n  public getWhite() {\n    switch (this.game.players[0]) {\n      case Player.Human: {\n        return \"Human\";\n      }\n      case Player.Computer: {\n        return \"Computer\";\n      }\n    }\n  }\n\n  public getBlack() {\n    switch (this.game.players[1]) {\n      case Player.Human: {\n        return \"Human\";\n      }\n      case Player.Computer: {\n        return \"Computer\";\n      }\n    }\n  }\n\n  public black_computer() {\n    this.game.players[1] = Player.Computer;\n  }\n\n  public black_human() {\n    this.game.players[1] = Player.Human;\n  }\n\n  public click(index : number) {\n    console.log(\"Mouse clicked on \" + index);\n    this.turn(index);\n  }\n\n  public update(nboard : Board) {\n    this.game.board = nboard;\n\n    if ((nboard.next == Side.White) && (this.game.players[0] == Player.Computer)\n      ||(nboard.next == Side.Black) && (this.game.players[1] == Player.Computer)) {\n      this.aiturn();\n    }\n  }\n\n  turn(index : number) {\n    this.service.turn(this.game.board.id, index).subscribe(\n      nboard => {\n        this.update(nboard);\n      },\n      error => {\n        console.debug('Fehler', error);\n      }\n    )\n  }\n\n  aiturn() {\n    this.service.aiturn(this.game.board.id).subscribe(\n      nboard => {\n        this.update(nboard);\n      },\n      error => {\n        console.debug('Fehler', error);\n      }\n    )\n  }\n}\n","\n<div class=\"top\">QANGO</div>\n<div class=\"square\">\n  <app-cell  *ngFor=\"let i of [00,01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]\"\n   [index]=\"i\" class=\"{{ colors[i] }}\"></app-cell>\n</div>\n<!--<hr>-->\n<!--<small>Position: {{ game.board.id }}</small>-->\n<div class=\"bottom\">\n  <div class=\"item\">\n    <div class=\"submenu\">\n      <div class=\"subitem\" (click)=\"white_computer()\">Computer</div>\n      <div class=\"subitem\" (click)=\"white_human()\">Human</div>\n    </div>\n    <span class=\"white\">&#x25CF;</span> {{ getWhite() }}</div>\n  <div class=\"item\" (click)=\"newgame()\">New Game</div>\n  <div class=\"item\">\n    <div class=\"submenu\">\n      <div class=\"subitem\" (click)=\"black_computer()\">Computer</div>\n      <div class=\"subitem\" (click)=\"black_human()\">Human</div>\n    </div>\n    <span class=\"black\">&#x25CF;</span> {{ getBlack() }}</div>\n</div>","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CellComponent } from './cell/cell.component';\nimport { QangoService } from './qango.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CellComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: QangoService, useClass: QangoService }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Side } from '../qango';\nimport { AppComponent } from '../app.component'\n\n@Component({\n  selector: 'app-cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.css']\n})\nexport class CellComponent implements OnInit {\n  @Input() index : number;\n\n  app : AppComponent;\n\n  constructor(app : AppComponent) {\n    this.app = app;\n  }\n\n  ngOnInit() {\n  }\n\n  getSide() : Side {\n    return this.app.game.board.field[this.index]\n  }\n\n  getClasses() : String {\n    var cls = \"\";\n    \n    if (this.getSide() == Side.White) {\n      cls += \"sphere bwhite\";\n    }\n    if (this.getSide() == Side.Black) {\n      cls += \"sphere bblack\";\n    }\n\n    return cls;\n  }\n\n  getBackClasses() : String {\n    var cls = \"full\";\n    \n    if (this.isWinningField()) {\n      cls += \" winning\";\n    }\n\n    return cls;\n  }\n\n  isWinningField() : Boolean {\n    return this.app.game.board.winning_fields.find(i => i == this.index) != undefined;\n  }\n\n  public activate() {\n    this.app.click(this.index);\n  }\n}\n","<div class=\"{{ getBackClasses() }}\" (click)=\"activate()\">\n<div class=\"{{ getClasses() }}\"></div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpResponse } from '@angular/common/http';\nimport { Board } from './qango';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class QangoService {\n\n  constructor(private http: HttpClient) {}\n\n  start() : Observable<Board> {\n    let url = \"http://localhost:8080/board/0\";\n\n    return this.http.get<Board>(url);\n  }\n\n  turn(id : number, index : number) : Observable<Board> {\n    let url = \"http://localhost:8080/board/\" + id + \"/turn/\" + index;\n\n    return this.http.get<Board>(url);\n  }\n\n  aiturn(id : number) : Observable<Board> {\n    let url = \"http://localhost:8080/board/\" + id + \"/aiturn\";\n\n    return this.http.get<Board>(url);\n  }\n}\n","// qango.ts\n\nexport enum Side {\n  None = \"none\",\n  Black = \"black\",\n  White = \"white\",\n}\n\nexport interface Board {\n  id : number;\n  won : Side;\n  winning_fields : number[];\n  next : Side;\n  field : Side[];\n}\n\nexport enum Player {\n  Human = \"human\",\n  Computer = \"computer\",\n}\n\nexport interface Game {\n  board : Board;\n  ailevel : number;\n  players : Player[];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}